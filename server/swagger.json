{
  "openapi": "3.0.0",
  "info": {
    "title": "bcrs-team3 API Documentation",
    "version": "1.0.0",
    "description": "API documentation for bcrs-team3 application"
  },
  "paths": {
    "/api/users": {
      "get": {
        "summary": "findAllUsers",
        "description": "Get all users",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "User details successfully retrieved"
          },
          "400": {
            "description": "Bad Request - Input must be a number"
          },
          "404": {
            "description": "User with the specified userId not found"
          },
          "500": {
            "description": "Internal Server Error - Database connection issue"
          }
        }
      },
      "post": {
        "summary": "createUser",
        "description": "Create a new User.",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/NewUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User details successfully retrieved"
          },
          "400": {
            "description": "Bad Request - Input must be a number"
          },
          "404": {
            "description": "User with the specified userId not found"
          },
          "500": {
            "description": "Internal Server Error - Database connection issue"
          }
        }
      }
    },
    "/api/users/{userId}": {
      "get": {
        "summary": "findUserById",
        "description": "Get all users",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "User details successfully retrieved"
          },
          "400": {
            "description": "Bad Request - Input must be a number"
          },
          "404": {
            "description": "User with the specified userId not found"
          },
          "500": {
            "description": "Internal Server Error - Database connection issue"
          }
        }
      },
      "put": {
        "summary": "Update User",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The ID of the user to update",
            "schema": {
              "type": "string",
              "format": "ObjectId"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete User",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "ObjectId"
            },
            "description": "The ID of the user"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/security/signin": {
      "post": {
        "summary": "Sign in as user",
        "tags": [
          "Security"
        ],
        "description": "Sign in a user by providing their email and password.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SigninRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful signin"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/security/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Security"
        ],
        "description": "Registers a new user with the provided information.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registration successful"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/security/verify/users/{email}": {},
    "/api/security/verify/users/{email}/security-questions": {
      "get": {
        "summary": "find Selected Security Questions",
        "description": "Get all Security Questions",
        "tags": [
          "Security"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Enter user email"
          }
        ],
        "responses": {
          "200": {
            "description": "User details successfully retrieved"
          },
          "400": {
            "description": "Bad Request: Email address from req.params required"
          },
          "404": {
            "description": "Not Found: Unable to find employee with email"
          },
          "500": {
            "description": "Internal Server Error - Database connection issue"
          }
        }
      }
    },
    "/api/security/users/{email}/reset-password": {
      "delete": {
        "summary": "resetPassword",
        "description": "Change the user's password.",
        "tags": [
          "Security"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            },
            "description": "The email address of the user whose password needs to be reset"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SigninRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "additionalProperties": false
      },
      "UserRegistration": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "phoneNumber": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "language": {
                "type": "string"
              },
              "selectedSecurityQuestions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "question": {
                      "type": "string"
                    },
                    "answer": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "question",
                    "answer"
                  ]
                }
              }
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "language": {
            "type": "string"
          },
          "lastSignedIn": {
            "type": "string"
          }
        },
        "required": [
          "userId",
          "firstName",
          "lastName",
          "email",
          "phoneNumber",
          "address",
          "role",
          "isDisabled",
          "language",
          "lastSignedIn"
        ],
        "additionalProperties": false
      },
      "NewUser": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string",
                "example": "Jon"
              },
              "lastName": {
                "type": "string",
                "example": "Doe"
              },
              "email": {
                "type": "string",
                "example": "jdoe@bcrs.com"
              },
              "password": {
                "type": "string",
                "example": "Password01",
                "description": "The password must be at least 8 characters in long and contain at least one uppercase letter, one lowercase letter, and one number."
              },
              "role": {
                "type": "string",
                "example": "standard"
              },
              "isDisabled": {
                "type": "boolean",
                "example": false
              }
            }
          }
        }
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "phoneNumber": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "isDisabled": {
                "type": "boolean"
              },
              "language": {
                "type": "string"
              },
              "selectedSecurityQuestions": {
                "type": "array",
                "minItems": 2,
                "items": {
                  "type": "object",
                  "properties": {
                    "questionText": {
                      "type": "string"
                    },
                    "answerText": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "questionText",
                    "answerText"
                  ]
                }
              }
            }
          }
        }
      },
      "PasswordResetRequest": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          }
        },
        "required": [
          "password"
        ],
        "additionalProperties": false
      }
    }
  }
}